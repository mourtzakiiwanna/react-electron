[{"C:\\Users\\mourt\\react-electron\\src\\index.js":"1","C:\\Users\\mourt\\react-electron\\src\\App.js":"2","C:\\Users\\mourt\\react-electron\\src\\FilesViewer.js":"3","C:\\Users\\mourt\\react-electron\\src\\Icons.js":"4","C:\\Users\\mourt\\react-electron\\src\\Home.js":"5","C:\\Users\\mourt\\react-electron\\src\\AddFieldsPage.js":"6","C:\\Users\\mourt\\react-electron\\src\\AddInheritancePage.js":"7","C:\\Users\\mourt\\react-electron\\src\\AddSchemePage.js":"8","C:\\Users\\mourt\\react-electron\\src\\Prototype.js":"9","C:\\Users\\mourt\\react-electron\\src\\ValueContext.js":"10","C:\\Users\\mourt\\react-electron\\src\\AddNamePage.js":"11","C:\\Users\\mourt\\react-electron\\src\\CustomAlert.js":"12","C:\\Users\\mourt\\react-electron\\src\\reportWebVitals.js":"13","C:\\Users\\mourt\\react-electron\\src\\SideMenu.js":"14","C:\\Users\\mourt\\react-electron\\src\\LocalPrototypes.js":"15","C:\\Users\\mourt\\react-electron\\src\\CorePrototypes.js":"16","C:\\Users\\mourt\\react-electron\\src\\HomePage.js":"17","C:\\Users\\mourt\\react-electron\\src\\AddFieldModal.js":"18","C:\\Users\\mourt\\react-electron\\src\\AddInheritanceModal.js":"19","C:\\Users\\mourt\\react-electron\\src\\AddFieldGroupModal.js":"20","C:\\Users\\mourt\\react-electron\\src\\UpdateFieldModal.js":"21","C:\\Users\\mourt\\react-electron\\src\\PrototypeCore.js":"22"},{"size":424,"mtime":1693828845789,"results":"23","hashOfConfig":"24"},{"size":3204,"mtime":1704638619841,"results":"25","hashOfConfig":"24"},{"size":807,"mtime":1693823961749,"results":"26","hashOfConfig":"24"},{"size":1325,"mtime":1693824092947,"results":"27","hashOfConfig":"24"},{"size":3756,"mtime":1694344461678,"results":"28","hashOfConfig":"24"},{"size":3994,"mtime":1693133636705,"results":"29","hashOfConfig":"24"},{"size":3026,"mtime":1693133632539,"results":"30","hashOfConfig":"24"},{"size":2062,"mtime":1693133626821,"results":"31","hashOfConfig":"24"},{"size":46149,"mtime":1705148325206,"results":"32","hashOfConfig":"24"},{"size":417,"mtime":1693045414065,"results":"33","hashOfConfig":"24"},{"size":6416,"mtime":1705007746615,"results":"34","hashOfConfig":"24"},{"size":191,"mtime":1693206392837,"results":"35","hashOfConfig":"24"},{"size":362,"mtime":1693821786864,"results":"36","hashOfConfig":"24"},{"size":5467,"mtime":1705138284736,"results":"37","hashOfConfig":"24"},{"size":1268,"mtime":1694340593518,"results":"38","hashOfConfig":"24"},{"size":1274,"mtime":1694340648791,"results":"39","hashOfConfig":"24"},{"size":1304,"mtime":1705135124697,"results":"40","hashOfConfig":"24"},{"size":8616,"mtime":1704992869789,"results":"41","hashOfConfig":"24"},{"size":2713,"mtime":1700922672351,"results":"42","hashOfConfig":"24"},{"size":1963,"mtime":1700923698826,"results":"43","hashOfConfig":"24"},{"size":9322,"mtime":1702730461447,"results":"44","hashOfConfig":"24"},{"size":50383,"mtime":1705135109061,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"j2gtvp",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mourt\\react-electron\\src\\index.js",[],["101","102"],"C:\\Users\\mourt\\react-electron\\src\\App.js",["103","104","105","106","107","108","109"],"import { useState, useMemo } from 'react';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Home from './HomePage'; // Import the Home component\nimport './css/App.css';\nimport Prototype from \"./Prototype\";\nimport PrototypeCore from \"./PrototypeCore\";\nimport Local from \"./LocalPrototypes\";\nimport Core from \"./CorePrototypes\";\nimport SideMenu from \"./SideMenu\";\n\nimport { ValueContextProvider } from './ValueContext'; // Import your ValueContextProvider\nimport AddNamePage from './AddNamePage';\nimport AddInheritancePage from './AddInheritancePage';\nimport AddFieldsPage from './AddFieldsPage';\nimport AddSchemePage from './AddSchemePage';\nimport Typography from '@mui/material/Typography';\n\n// Check if the code is running in Electron\nconst isElectron = window.require && window.require('@electron/remote');\n\nconst fs = isElectron ? window.require('fs') : null;\nconst pathModule = isElectron ? window.require('path') : null;\n\nconst { app } = isElectron ? window.require('@electron/remote') : { app: null };\n\nconst formatSize = size => {\n  var i = Math.floor(Math.log(size) / Math.log(1024));\n  return (\n    (size / Math.pow(1024, i)).toFixed(2) * 1 +\n    ' ' +\n    ['B', 'kB', 'MB', 'GB', 'TB'][i]\n  );\n};\n\nfunction App() {\n  const [path, setPath] = useState(isElectron ? app.getAppPath() : '');\n\n  const files = useMemo(\n    () =>\n      isElectron\n        ? fs\n            .readdirSync(path)\n            .map(file => {\n              const stats = fs.statSync(pathModule.join(path, file));\n              return {\n                name: file,\n                size: stats.isFile() ? formatSize(stats.size ?? 0) : null,\n                directory: stats.isDirectory()\n              };\n            })\n            .sort((a, b) => {\n              if (a.directory === b.directory) {\n                return a.name.localeCompare(b.name);\n              }\n              return a.directory ? -1 : 1;\n            })\n        : [], // Empty array if not in Electron\n    [path]\n  );\n\n  const onBack = () => setPath(pathModule.dirname(path));\n  const onOpen = folder => setPath(pathModule.join(path, folder));\n\n  const [searchString, setSearchString] = useState('');\n\n  // Filter files only if in Electron\n  const filteredFiles = isElectron\n    ? files.filter(s => s.name.startsWith(searchString))\n    : [];\n\n  return (\n    <Router>\n      <div>\n       \n        <ValueContextProvider>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/local\" element ={<Local />} />\n          <Route path=\"/core\" element ={<Core />} />\n          <Route path=\"/prototype/:groupName/:prototypeName\" element ={<Prototype />} />\n          <Route path=\"/prototype-core/:groupName/:prototypeName\" element ={<PrototypeCore />} />\n          <Route path=\"/create\" element={<AddNamePage />} />\n          <Route path=\"/add-inheritance\" element={<AddInheritancePage />} />\n          <Route path=\"/add-fields\" element={<AddFieldsPage />} />\n          <Route path=\"/add-scheme\" element={<AddSchemePage />} />\n        </Routes>\n      </ValueContextProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n","C:\\Users\\mourt\\react-electron\\src\\FilesViewer.js",[],["110","111"],"C:\\Users\\mourt\\react-electron\\src\\Icons.js",[],"C:\\Users\\mourt\\react-electron\\src\\Home.js",["112"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './css/App.css';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport Box from '@mui/material/Stack';\r\n\r\nfunction Home() {\r\n  const groups = [\r\n    { name: 'Local Prototypes', url: 'http://localhost:8080/getLocal' },\r\n    { name: 'Core Prototypes', url: 'http://localhost:8080/getCore' },\r\n    { name: 'Delta Prototypes', url: 'http://localhost:8080/getDelta' },\r\n  ];\r\n\r\n  const [expandedGroup, setExpandedGroup] = useState(null);\r\n  const [groupData, setGroupData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async (url, index) => {\r\n      try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        const formattedData = data.map(name => ({\r\n          formattedName: name.replace(/([A-Z])/g, ' $1'),\r\n          unformattedName: name,\r\n        }));\r\n        setGroupData(prevData => ({ ...prevData, [index]: formattedData }));\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    groups.forEach((group, index) => {\r\n      if (expandedGroup === index) {\r\n        fetchData(group.url, index);\r\n      }\r\n    });\r\n  }, [expandedGroup]);\r\n\r\n  const handleGroupClick = (index) => {\r\n    if (expandedGroup === index) {\r\n      setExpandedGroup(null);\r\n    } else {\r\n      setExpandedGroup(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"center-button\">\r\n        <Link to=\"/create\" className=\"create-button\">\r\n          Create new prototype\r\n        </Link>\r\n      </div>\r\n      {groups.map((group, index) => (\r\n        <div key={index} className=\"group\">\r\n          <div\r\n            className={`group-name ${expandedGroup === index ? 'expanded' : ''}`}\r\n            onClick={() => handleGroupClick(index)}\r\n          >\r\n            {group.name}\r\n          </div>\r\n        \r\n          {expandedGroup === index && (\r\n            <div className=\"group-content\">\r\n              {groupData[index] && (\r\n\r\n                <div>\r\n                    \r\n                  <Box sx={{ alignItems: 'flex-end', margin: '30px' }}>\r\n                    <span className=\"all-local\">\r\n                    <Link to={`/${group.name.toLowerCase().replace(/\\s+/g, '').replace(\"prototypes\",\"\")}` } className='all-local'>\r\n                        All {group.name.toLowerCase().replace(/\\s+/g, '').replace(\"prototypes\",\"\")} prototypes\r\n                      </Link>\r\n                      <NavigateNextIcon />\r\n                    </span>\r\n                  </Box>\r\n  \r\n                  {groupData[index].map((prototype, valueIndex) => {\r\n                    const formattedGroupName = group.name\r\n                    .toLowerCase()\r\n                    .replace(/\\s+/g, '')\r\n                    .replace('prototypes', '');\r\n                    const fullPath = `/prototype/${formattedGroupName}/${prototype.unformattedName}`;\r\n  \r\n                    return (\r\n                      <div className='card'>\r\n                        <Link\r\n                          to={fullPath}\r\n                          key={`${index}-${valueIndex}`}\r\n                          style={{ textDecoration: 'none', background: 'none' }}\r\n                          className='link-card' // Add a class to the Link component for targeting in CSS\r\n                        >\r\n                          <div className='card-details'>{prototype.formattedName}</div>\r\n                        </Link>\r\n                      </div>\r\n                    );\r\n                    \r\n                  })}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default Home;\r\n",["113","114"],"C:\\Users\\mourt\\react-electron\\src\\AddFieldsPage.js",[],"C:\\Users\\mourt\\react-electron\\src\\AddInheritancePage.js",[],"C:\\Users\\mourt\\react-electron\\src\\AddSchemePage.js",[],"C:\\Users\\mourt\\react-electron\\src\\Prototype.js",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147"],"C:\\Users\\mourt\\react-electron\\src\\ValueContext.js",[],"C:\\Users\\mourt\\react-electron\\src\\AddNamePage.js",["148","149"],"import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './css/AddNamePage.css';\r\nimport Stack from '@mui/material/Stack';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport WarningIcon from '@mui/icons-material/Error'; // Import the warning icon\r\n\r\nfunction AddNamePage() {\r\n  const navigate = useNavigate();\r\n  const [alert, setAlert] = useState(false);\r\n  const [alertContent, setAlertContent] = useState('');\r\n  const [prototypeName, setPrototypeName] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  let headers = new Headers();\r\n\r\n  headers.append('Content-Type', 'application/json');\r\n  headers.append('Accept', 'application/json');\r\n  headers.append('Origin','http://localhost:3000');\r\n  const handleNameChange = (event) => {\r\n    setPrototypeName(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    if (prototypeName) {\r\n      try {\r\n        // Check if the prototype with the same name already exists\r\n        const existingPrototypes = await fetchExistingPrototypes(`http://localhost:8080/api/type/category/local`);\r\n        \r\n        const isPrototypeExists = existingPrototypes.includes(prototypeName);\r\n  \r\n        if (isPrototypeExists) {\r\n          setAlertContent('Prototype with the same name already exists. Please choose a different name.');\r\n        } else {\r\n          // If the prototypeName is not empty and doesn't exist, create the prototype\r\n          await createPrototype(`http://localhost:8080/api/type/${prototypeName}`);\r\n          setSuccess(true);\r\n          setAlertContent('The prototype has been successfully created!');\r\n          setTimeout(() => {\r\n            navigate(`/prototype/local/${prototypeName}`);\r\n          }, 2000);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking existing prototypes or creating prototype:', error);\r\n        setAlertContent('An error occurred. Please try again.');\r\n      }\r\n    } else {\r\n      // If the prototypeName is empty, display \"Enter name\" message\r\n      setAlertContent('Please enter a valid prototype name.');\r\n    }\r\n  \r\n    setAlert(true); // Show the Snackbar alert\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n    }, 2000);\r\n  };\r\n\r\n  async function fetchExistingPrototypes(url = \"\") {\r\n    const response = await fetch(url, {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n  \r\n    const data = await response.json();\r\n    console.log(data);\r\n    return data; // Assuming the response contains an array of prototypes with a \"name\" property\r\n  }\r\n  \r\n\r\n  async function createPrototype(url = \"\") {\r\n  const response = await fetch(url, {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    cache: \"no-cache\",\r\n    credentials: \"same-origin\",\r\n    headers: headers,\r\n    redirect: \"follow\",\r\n    referrerPolicy: \"no-referrer\",\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! Status: ${response.status}`);\r\n  }\r\n\r\n  return response.json();\r\n}\r\n  function timeout(delay) {\r\n    return new Promise((res) => setTimeout(res, delay));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        sx={{\r\n          height: '100%',\r\n          display: 'flex',\r\n          marginTop: '240px',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <Card sx={{ width: '100%', maxWidth: '600px' }}>\r\n          <CardContent sx={{ margin: '70px' }}>\r\n            <h3 className=\"add-prototype-title\">Create Prototype</h3>\r\n\r\n            <form onSubmit={handleSubmit} noValidate={true}>\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Prototype Name\"\r\n                defaultValue=\"\"\r\n                variant=\"standard\"\r\n                type=\"text\"\r\n                size=\"small\"\r\n                fullWidth\r\n                value={prototypeName}\r\n                onChange={handleNameChange}\r\n              />\r\n\r\n              <Box\r\n                component=\"span\"\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                marginTop=\"40px\"\r\n              >\r\n                <Button\r\n                  variant=\"text\"\r\n                  component={Link}\r\n                  to=\"/\"\r\n                  sx={{\r\n                    height: '40px',\r\n                    color: '#9b9b9b',\r\n                    textDecoration: 'underline',\r\n                    '&:hover': {\r\n                      color: '#535353',\r\n                      textDecoration: 'underline',\r\n                      backgroundColor: '#e6e6e6',\r\n                    },\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  size=\"small\"\r\n                  sx={{\r\n                    backgroundColor: '#b3b3b3',\r\n                    height: '40px',\r\n                    color: '#fff',\r\n                    border: 'none',\r\n                    borderRadius: '5px',\r\n                    minWidth: '80px',\r\n                    marginLeft: '20px',\r\n                    '&:hover': {\r\n                      backgroundColor: '#9b9b9b',\r\n                    },\r\n                  }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Box>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n\r\n      <Snackbar open={alert} autoHideDuration={6000} onClose={() => setAlert(false)}>\r\n        <MuiAlert\r\n          icon={success ? <CheckIcon /> : <WarningIcon />} // Use CheckIcon for success, WarningIcon for \"Enter name\"\r\n          severity={success ? 'success' : 'error'}\r\n          sx={{ width: '100%', fontWeight: '500' }}\r\n        >\r\n          {alertContent}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddNamePage;\r\n","C:\\Users\\mourt\\react-electron\\src\\CustomAlert.js",[],["150","151"],"C:\\Users\\mourt\\react-electron\\src\\reportWebVitals.js",[],"C:\\Users\\mourt\\react-electron\\src\\SideMenu.js",["152","153","154","155"],"C:\\Users\\mourt\\react-electron\\src\\LocalPrototypes.js",["156"],"import React, { useEffect, useState } from 'react';\r\nimport './css/LocalPrototypes.css'; // Import the CSS file\r\nimport { Link } from 'react-router-dom'; // Import the Link component\r\nimport SideMenu from './SideMenu';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nfunction LocalPrototypes() {\r\n  const [localData, setLocalData] = useState([]);\r\n  const navigation = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    fetch('http://localhost:8080/getLocal')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setLocalData(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching local data:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"local-page\">\r\n      \r\n      <SideMenu/>\r\n      <div className='main-container'>\r\n      <button onClick={() => navigation(\"/\")} className=\"back-button\">Back</button> \r\n\r\n        <h1 className='header'>Local Prototypes</h1>\r\n\r\n        {localData.map((item) => (\r\n          <Link to={`/prototype/local/${item}`} key={item} className=\"local-card\">\r\n            \r\n              {item}\r\n        \r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LocalPrototypes;\r\n","C:\\Users\\mourt\\react-electron\\src\\CorePrototypes.js",["157"],"import React, { useEffect, useState } from 'react';\r\nimport './css/LocalPrototypes.css'; // Import the CSS file\r\nimport { Link } from 'react-router-dom'; // Import the Link component\r\nimport SideMenu from './SideMenu';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction CorePrototypes() {\r\n  const [coreData, setcoreData] = useState([]);\r\n  const navigation = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    fetch('http://localhost:8080/getCore')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setcoreData(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching core data:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"local-page\">\r\n      \r\n      <SideMenu/>\r\n      <div className='main-container'>\r\n        <button onClick={() => navigation(\"/\")} className=\"back-button\">Back</button> \r\n\r\n        <h1 className='header'>Core Prototypes</h1>\r\n          {coreData.map((item) => (\r\n            <Link to={`/prototype/core/${item}`} key={item} className=\"local-card\">\r\n              \r\n                {item}\r\n          \r\n            </Link>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CorePrototypes;\r\n","C:\\Users\\mourt\\react-electron\\src\\HomePage.js",["158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"C:\\Users\\mourt\\react-electron\\src\\AddFieldModal.js",["175","176","177","178","179","180","181"],"import { Modal, Stack, TextField, Checkbox, FormControlLabel, Button } from '@mui/material';\r\nimport './css/Prototype.css'; // Import your CSS file\r\nimport Box from '@mui/material/Box';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { Select, MenuItem, FormControl, InputLabel, ListSubheader, makeStyles} from '@material-ui/core';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 500,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid white',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const groups = [\r\n    { name: 'Local Prototypes', url: 'http://localhost:8080/api/type/category/local' },\r\n    { name: 'Core Prototypes', url: 'http://localhost:8080/api/type/category/core' },\r\n    { name: 'Delta Prototypes', url: 'http://localhost:8080/api/type/category/delta' },\r\n  ];\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    subheader: {\r\n      backgroundColor: 'white',\r\n    },\r\n  }));\r\n\r\n  \r\n  function AddFieldModal({\r\n    showFieldModal,\r\n    selectedFieldId,\r\n    selectedFieldType,\r\n    selectedFieldConstraint,\r\n    handleFieldIdChange,\r\n    handleFieldTypeChange,\r\n    handleFieldConstraintChange,\r\n    handleSaveField,\r\n    handleCancelField,\r\n  }) {\r\n\r\n    const saveField = async () => {\r\n      try {\r\n        // Assuming handleSaveInheritance is an async function that makes the API call\r\n        console.log(selectedFieldId);\r\n        console.log(selectedFieldType);\r\n        console.log(selectedFieldConstraint);\r\n\r\n        await handleSaveField(selectedFieldId, selectedFieldType, selectedFieldConstraint);\r\n  \r\n        // After successful API call, you can close the modal or perform any other actions\r\n        handleCancelField();\r\n      } catch (error) {\r\n        console.error('Error saving field:', error);\r\n        // Handle the error, show an alert, or perform other error handling actions\r\n      }\r\n    };\r\n  \r\n\r\n    const classes = useStyles();\r\n    const [groupData, setGroupData] = useState({});\r\n\r\n    const fetchAllData = async () => {\r\n      const data = {};\r\n  \r\n      for (const group of groups) {\r\n        try {\r\n          const response = await fetch(group.url);\r\n          const groupData = await response.json();\r\n          data[group.name] = groupData;\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      }\r\n  \r\n      setGroupData(data); // Set the fetched data to the state\r\n    };\r\n  \r\n    useEffect(() => {\r\n      // Fetch data for all groups when the component mounts\r\n      fetchAllData();\r\n    }, []);\r\n  \r\n  \r\n \r\n\r\n  return (\r\n    <Modal open={showFieldModal} onClose={handleCancelField} aria-labelledby=\"modal-modal-title\"\r\n    aria-describedby=\"modal-modal-description\">\r\n    <Box sx={style}>\r\n      <div className=\"add-field-form\">\r\n        <h3 className=\"add-new-field\">Add Field</h3>\r\n\r\n        <FormControl sx={{ width: '300px'}}> \r\n\r\n        <Stack spacing={2} sx={{ margin: '10px' }}>\r\n        \r\n        {/* <TextField\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"Field Group ID\"\r\n                size=\"small\"\r\n                name=\"fgId\"\r\n                value={newFieldInfo.fgId}\r\n                onChange={handleInputChange}\r\n            /> */}\r\n\r\n        <TextField\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"Field ID\"\r\n                size=\"small\"\r\n                name=\"id\"\r\n                value={selectedFieldId}\r\n                onChange={handleFieldIdChange}\r\n                sx={{ width: '300px' }}\r\n\r\n            />\r\n\r\n            <TextField\r\n            label=\"Value Type\"\r\n            size=\"small\"\r\n            name=\"valueType\"\r\n            select\r\n            value={selectedFieldType}\r\n            onChange={handleFieldTypeChange}\r\n            SelectProps={{\r\n                displayEmpty: true,\r\n                renderValue: (selected) => (selected ? selected : \"\"),\r\n            }}\r\n            >\r\n                <MenuItem value=\"TEXT\">TEXT</MenuItem>\r\n                <MenuItem value=\"BIGTEXT\">BIGTEXT</MenuItem>\r\n                <MenuItem value=\"RICHTEXT\">RICHTEXT</MenuItem>\r\n                <MenuItem value=\"KEYWORD\">KEYWORD</MenuItem>\r\n                <MenuItem value=\"MIMETYPE\">MIMETYPE</MenuItem>\r\n                <MenuItem value=\"EMAIL\">EMAIL</MenuItem>\r\n                <MenuItem value=\"URL\">URL</MenuItem>\r\n                <MenuItem value=\"BOOL\">BOOL</MenuItem>\r\n                <MenuItem value=\"NUMBER\">NUMBER</MenuItem>\r\n                <MenuItem value=\"YEAR\">YEAR</MenuItem>\r\n                <MenuItem value=\"DATE\">DATE</MenuItem>\r\n                <MenuItem value=\"REF\">REF</MenuItem>\r\n                <MenuItem value=\"REF_PATH\">REF_PATH</MenuItem>\r\n                <MenuItem value=\"EMBED\">EMBED</MenuItem>\r\n                <MenuItem value=\"FILE_PATH\">FILE_PATH</MenuItem>\r\n                <MenuItem value=\"FILE\">FILE</MenuItem>\r\n                <MenuItem value=\"LOCALE\">LOCALE</MenuItem>\r\n                <MenuItem value=\"PROTOTYPE\">PROTOTYPE</MenuItem>\r\n                <MenuItem value=\"DATASTORE\">DATASTORE</MenuItem>\r\n                <MenuItem value=\"DATAINDEX\">DATAINDEX</MenuItem>\r\n                <MenuItem value=\"SCHEME\">SCHEME</MenuItem>\r\n                <MenuItem value=\"FIELD\">FIELD</MenuItem>\r\n                <MenuItem value=\"FIELD_GROUP\">FIELD_GROUP</MenuItem>\r\n                <MenuItem value=\"FIELD_DEF\">FIELD_DEF</MenuItem>\r\n                <MenuItem value=\"FIELD_GROUP_DEF\">FIELD_GROUP_DEF</MenuItem>\r\n                <MenuItem value=\"GEO_POINT\">GEO_POINT</MenuItem>\r\n            </TextField>\r\n\r\n\r\n        {/* <TextField\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"Default Value\"\r\n                size=\"small\"\r\n                name=\"defaultValue\"\r\n                value={newFieldInfo.defaultValue}\r\n                onChange={handleInputChange}\r\n            /> */}\r\n \r\n        {/* <TextField\r\n            required\r\n            label=\"Attribute Type\"\r\n            size=\"small\"\r\n            name=\"attributeType\"\r\n            select\r\n            value={newFieldInfo.attributeType}\r\n            onChange={handleInputChange}\r\n            SelectProps={{\r\n                displayEmpty: true,\r\n                renderValue: (selected) => (selected ? selected : \"\"),\r\n            }}\r\n            >\r\n                <MenuItem value=\"STANDALONE_FIELD\">STANDALONE_FIELD</MenuItem>\r\n                <MenuItem value=\"FIELD\">FIELD</MenuItem>\r\n                <MenuItem value=\"FIELD_GROUP\">FIELD_GROUP</MenuItem>\r\n                <MenuItem value=\"SCHEME\">SCHEME</MenuItem>\r\n                <MenuItem value=\"SCHEME_FIELD\">SCHEME_FIELD</MenuItem>\r\n        </TextField> */}\r\n\r\n        <TextField\r\n            id=\"outlined-required\"\r\n            label=\"Constraint\"\r\n            size=\"small\"\r\n            name=\"constraint\"\r\n            value={selectedFieldConstraint}\r\n            onChange={handleFieldConstraintChange}\r\n            select\r\n            multiple\r\n            renderValue={(selected) => {\r\n                if (selected.length === 0) {\r\n                return 'Select a constraint';\r\n                }\r\n                return selected.map((value) => {\r\n                const [groupName, optionValue] = value.split('/');\r\n                return `${groupName.replace(\" Prototypes\", \"\").toLowerCase().replace(\" \", \"\").replace(/^/, '/')}/${value}`;\r\n                }).join(', ');\r\n            }}\r\n            >\r\n            <MenuItem value=\"\">Select a constraint</MenuItem>\r\n            {Object.entries(groupData).flatMap(([groupName, groupValues], index) => [\r\n                <ListSubheader key={groupName} classes={{ root: classes.subheader }} disabled={index !== 0}>\r\n                {groupName}\r\n                </ListSubheader>,\r\n                ...groupValues.map((value) => (\r\n                <MenuItem key={value} value={`${groupName}/${value}`}>\r\n                    {`${groupName.replace(\" Prototypes\", \"\").toLowerCase().replace(\" \", \"\").replace(/^/, '/')}/${value}`}\r\n                </MenuItem>\r\n                )),\r\n            ])}\r\n            </TextField>\r\n        </Stack>\r\n        </FormControl>\r\n\r\n        <div className=\"field-button-container\">\r\n         \r\n        <button className=\"cancel-field-button\" onClick={handleCancelField}>\r\n          Cancel\r\n        </button>\r\n\r\n        <button className=\"save-field-button\" onClick={saveField}>\r\n          Save\r\n        </button>\r\n\r\n      </div>\r\n      </div>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddFieldModal;","C:\\Users\\mourt\\react-electron\\src\\AddInheritanceModal.js",[],"C:\\Users\\mourt\\react-electron\\src\\AddFieldGroupModal.js",[],"C:\\Users\\mourt\\react-electron\\src\\UpdateFieldModal.js",["182","183","184","185","186","187","188"],"import { Modal, Stack, TextField, Checkbox, FormControlLabel, Button } from '@mui/material';\r\nimport './css/Prototype.css'; // Import your CSS file\r\nimport Box from '@mui/material/Box';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { Select, MenuItem, FormControl, InputLabel, ListSubheader, makeStyles} from '@material-ui/core';\r\n\r\nlet headers = new Headers();\r\n\r\n  headers.append('Content-Type', 'application/json');\r\n  headers.append('Accept', 'application/json');\r\n  headers.append('Origin','http://localhost:3000');\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 500,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid white',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const groups = [\r\n    { name: 'Local Prototypes', url: 'http://localhost:8080/api/type/category/local' },\r\n    { name: 'Core Prototypes', url: 'http://localhost:8080/api/type/category/core' },\r\n    { name: 'Delta Prototypes', url: 'http://localhost:8080/api/type/category/delta' },\r\n  ];\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    subheader: {\r\n      backgroundColor: 'white',\r\n    },\r\n  }));\r\n\r\n  \r\n  function UpdateFieldModal({\r\n    showUpdateFieldModal,\r\n    updatedFieldId,\r\n    selectedUpdateFieldId,\r\n    selectedUpdateFieldType,\r\n    selectedUpdateFieldConstraint,\r\n    handleUpdateFieldIdChange,\r\n    handleUpdateFieldTypeChange,\r\n    handleUpdateFieldConstraintChange,\r\n    handleSaveUpdateField,\r\n    handleCancelUpdateField,\r\n    initialUpdateFieldType,\r\n    initialUpdateFieldConstraint,\r\n  }) {\r\n\r\n    const saveField = async () => {\r\n      try {\r\n        // Assuming handleSaveInheritance is an async function that makes the API call\r\n        console.log(updatedFieldId);\r\n        console.log(selectedUpdateFieldType);\r\n        console.log(selectedUpdateFieldConstraint);\r\n\r\n        await handleSaveUpdateField(updatedFieldId, selectedUpdateFieldType, selectedUpdateFieldConstraint);\r\n  \r\n        // After successful API call, you can close the modal or perform any other actions\r\n        handleCancelUpdateField();\r\n      } catch (error) {\r\n        console.error('Error saving field:', error);\r\n        // Handle the error, show an alert, or perform other error handling actions\r\n      }\r\n    };\r\n  \r\n    console.log('updated field', updatedFieldId);\r\n    const classes = useStyles();\r\n    const [groupData, setGroupData] = useState({});\r\n\r\n    const fetchAllData = async () => {\r\n      const data = {};\r\n  \r\n      for (const group of groups) {\r\n        try {\r\n          const response = await fetch(group.url);\r\n          const groupData = await response.json();\r\n          data[group.name] = groupData;\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      }\r\n  \r\n      setGroupData(data); // Set the fetched data to the state\r\n    };\r\n  \r\n    useEffect(() => {\r\n      // Fetch data for all groups when the component mounts\r\n      fetchAllData();\r\n    }, []);\r\n  \r\n  console.log(\"open\",showUpdateFieldModal);\r\n \r\n\r\n  return (\r\n    <Modal open={showUpdateFieldModal} onClose={handleCancelUpdateField} aria-labelledby=\"modal-modal-title\"\r\n    aria-describedby=\"modal-modal-description\">\r\n    <Box sx={style}>\r\n      <div className=\"add-field-form\">\r\n        <h3 className=\"add-new-field\">Update Field</h3>\r\n\r\n        <FormControl sx={{ width: '300px'}}> \r\n\r\n        <Stack spacing={2} sx={{ margin: '10px' }}>\r\n        \r\n        {/* <TextField\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"Field Group ID\"\r\n                size=\"small\"\r\n                name=\"fgId\"\r\n                value={newFieldInfo.fgId}\r\n                onChange={handleInputChange}\r\n            /> */}\r\n\r\n        <TextField\r\n                id=\"outlined-required\"\r\n                label=\"Field ID\"\r\n                size=\"small\"\r\n                name=\"id\"\r\n                disabled                \r\n                defaultValue={updatedFieldId}\r\n                sx={{\r\n                  width: '300px',\r\n                  color: (theme) => (theme.palette.mode === 'light' ? theme.palette.grey[500] : theme.palette.grey[300]),\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n            label=\"Value Type\"\r\n            size=\"small\"\r\n            name=\"valueType\"\r\n            select\r\n            value={selectedUpdateFieldType}\r\n            onChange={handleUpdateFieldTypeChange}\r\n          \r\n            SelectProps={{\r\n                displayEmpty: true,\r\n                renderValue: (selected) => (selected ? selected : \"\"),\r\n            }}\r\n            >\r\n                <MenuItem value=\"TEXT\">TEXT</MenuItem>\r\n                <MenuItem value=\"BIGTEXT\">BIGTEXT</MenuItem>\r\n                <MenuItem value=\"RICHTEXT\">RICHTEXT</MenuItem>\r\n                <MenuItem value=\"KEYWORD\">KEYWORD</MenuItem>\r\n                <MenuItem value=\"MIMETYPE\">MIMETYPE</MenuItem>\r\n                <MenuItem value=\"EMAIL\">EMAIL</MenuItem>\r\n                <MenuItem value=\"URL\">URL</MenuItem>\r\n                <MenuItem value=\"BOOL\">BOOL</MenuItem>\r\n                <MenuItem value=\"NUMBER\">NUMBER</MenuItem>\r\n                <MenuItem value=\"YEAR\">YEAR</MenuItem>\r\n                <MenuItem value=\"DATE\">DATE</MenuItem>\r\n                <MenuItem value=\"REF\">REF</MenuItem>\r\n                <MenuItem value=\"REF_PATH\">REF_PATH</MenuItem>\r\n                <MenuItem value=\"EMBED\">EMBED</MenuItem>\r\n                <MenuItem value=\"FILE_PATH\">FILE_PATH</MenuItem>\r\n                <MenuItem value=\"FILE\">FILE</MenuItem>\r\n                <MenuItem value=\"LOCALE\">LOCALE</MenuItem>\r\n                <MenuItem value=\"PROTOTYPE\">PROTOTYPE</MenuItem>\r\n                <MenuItem value=\"DATASTORE\">DATASTORE</MenuItem>\r\n                <MenuItem value=\"DATAINDEX\">DATAINDEX</MenuItem>\r\n                <MenuItem value=\"SCHEME\">SCHEME</MenuItem>\r\n                <MenuItem value=\"FIELD\">FIELD</MenuItem>\r\n                <MenuItem value=\"FIELD_GROUP\">FIELD_GROUP</MenuItem>\r\n                <MenuItem value=\"FIELD_DEF\">FIELD_DEF</MenuItem>\r\n                <MenuItem value=\"FIELD_GROUP_DEF\">FIELD_GROUP_DEF</MenuItem>\r\n                <MenuItem value=\"GEO_POINT\">GEO_POINT</MenuItem>\r\n            </TextField>\r\n\r\n\r\n        {/* <TextField\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"Default Value\"\r\n                size=\"small\"\r\n                name=\"defaultValue\"\r\n                value={newFieldInfo.defaultValue}\r\n                onChange={handleInputChange}\r\n            /> */}\r\n \r\n        {/* <TextField\r\n            required\r\n            label=\"Attribute Type\"\r\n            size=\"small\"\r\n            name=\"attributeType\"\r\n            select\r\n            value={newFieldInfo.attributeType}\r\n            onChange={handleInputChange}\r\n            SelectProps={{\r\n                displayEmpty: true,\r\n                renderValue: (selected) => (selected ? selected : \"\"),\r\n            }}\r\n            >\r\n                <MenuItem value=\"STANDALONE_FIELD\">STANDALONE_FIELD</MenuItem>\r\n                <MenuItem value=\"FIELD\">FIELD</MenuItem>\r\n                <MenuItem value=\"FIELD_GROUP\">FIELD_GROUP</MenuItem>\r\n                <MenuItem value=\"SCHEME\">SCHEME</MenuItem>\r\n                <MenuItem value=\"SCHEME_FIELD\">SCHEME_FIELD</MenuItem>\r\n        </TextField> */}\r\n\r\n        <TextField\r\n            id=\"outlined-required\"\r\n            label=\"Constraint\"\r\n            size=\"small\"\r\n            name=\"constraint\"\r\n            value={selectedUpdateFieldConstraint}\r\n            onChange={handleUpdateFieldConstraintChange}\r\n            defaultValue={initialUpdateFieldConstraint}\r\n            select\r\n            multiple\r\n            renderValue={(selected) => {\r\n                if (selected.length === 0) {\r\n                return 'Select a constraint';\r\n                }\r\n                return selected.map((value) => {\r\n                const [groupName, optionValue] = value.split('/');\r\n                return `${groupName.replace(\" Prototypes\", \"\").toLowerCase().replace(\" \", \"\").replace(/^/, '/')}/${value}`;\r\n                }).join(', ');\r\n            }}\r\n            >\r\n            <MenuItem value=\"\">Select a constraint</MenuItem>\r\n            {Object.entries(groupData).flatMap(([groupName, groupValues], index) => [\r\n                <ListSubheader key={groupName} classes={{ root: classes.subheader }} disabled={index !== 0}>\r\n                {groupName}\r\n                </ListSubheader>,\r\n                ...groupValues.map((value) => (\r\n                <MenuItem key={value} value={`${groupName}/${value}`}>\r\n                    {`${groupName.replace(\" Prototypes\", \"\").toLowerCase().replace(\" \", \"\").replace(/^/, '/')}/${value}`}\r\n                </MenuItem>\r\n                )),\r\n            ])}\r\n            </TextField>\r\n        </Stack>\r\n        </FormControl>\r\n\r\n        <div className=\"field-button-container\">\r\n         \r\n        <button className=\"cancel-field-button\" onClick={handleCancelUpdateField}>\r\n          Cancel\r\n        </button>\r\n\r\n        <button className=\"save-field-button\" onClick={saveField}>\r\n          Save\r\n        </button>\r\n\r\n      </div>\r\n      </div>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UpdateFieldModal;","C:\\Users\\mourt\\react-electron\\src\\PrototypeCore.js",["189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207"],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":3,"column":10,"nodeType":"214","messageId":"215","endLine":3,"endColumn":14},{"ruleId":"212","severity":1,"message":"216","line":11,"column":8,"nodeType":"214","messageId":"215","endLine":11,"endColumn":16},{"ruleId":"212","severity":1,"message":"217","line":18,"column":8,"nodeType":"214","messageId":"215","endLine":18,"endColumn":18},{"ruleId":"212","severity":1,"message":"218","line":63,"column":9,"nodeType":"214","messageId":"215","endLine":63,"endColumn":15},{"ruleId":"212","severity":1,"message":"219","line":64,"column":9,"nodeType":"214","messageId":"215","endLine":64,"endColumn":15},{"ruleId":"212","severity":1,"message":"220","line":66,"column":24,"nodeType":"214","messageId":"215","endLine":66,"endColumn":39},{"ruleId":"212","severity":1,"message":"221","line":69,"column":9,"nodeType":"214","messageId":"215","endLine":69,"endColumn":22},{"ruleId":"208","replacedBy":"222"},{"ruleId":"210","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":37,"column":6,"nodeType":"226","endLine":37,"endColumn":21,"suggestions":"227"},{"ruleId":"208","replacedBy":"228"},{"ruleId":"210","replacedBy":"229"},{"ruleId":"212","severity":1,"message":"230","line":6,"column":8,"nodeType":"214","messageId":"215","endLine":6,"endColumn":24},{"ruleId":"212","severity":1,"message":"231","line":10,"column":8,"nodeType":"214","messageId":"215","endLine":10,"endColumn":16},{"ruleId":"212","severity":1,"message":"232","line":11,"column":8,"nodeType":"214","messageId":"215","endLine":11,"endColumn":18},{"ruleId":"212","severity":1,"message":"233","line":13,"column":8,"nodeType":"214","messageId":"215","endLine":13,"endColumn":14},{"ruleId":"212","severity":1,"message":"234","line":14,"column":8,"nodeType":"214","messageId":"215","endLine":14,"endColumn":16},{"ruleId":"212","severity":1,"message":"235","line":15,"column":8,"nodeType":"214","messageId":"215","endLine":15,"endColumn":19},{"ruleId":"212","severity":1,"message":"217","line":21,"column":8,"nodeType":"214","messageId":"215","endLine":21,"endColumn":18},{"ruleId":"212","severity":1,"message":"236","line":31,"column":3,"nodeType":"214","messageId":"215","endLine":31,"endColumn":15},{"ruleId":"212","severity":1,"message":"237","line":34,"column":3,"nodeType":"214","messageId":"215","endLine":34,"endColumn":25},{"ruleId":"212","severity":1,"message":"238","line":37,"column":10,"nodeType":"214","messageId":"215","endLine":37,"endColumn":38},{"ruleId":"212","severity":1,"message":"239","line":39,"column":7,"nodeType":"214","messageId":"215","endLine":39,"endColumn":21},{"ruleId":"212","severity":1,"message":"240","line":108,"column":7,"nodeType":"214","messageId":"215","endLine":108,"endColumn":10},{"ruleId":"212","severity":1,"message":"241","line":111,"column":9,"nodeType":"214","messageId":"215","endLine":111,"endColumn":18},{"ruleId":"212","severity":1,"message":"242","line":145,"column":21,"nodeType":"214","messageId":"215","endLine":145,"endColumn":33},{"ruleId":"212","severity":1,"message":"243","line":158,"column":25,"nodeType":"214","messageId":"215","endLine":158,"endColumn":41},{"ruleId":"212","severity":1,"message":"244","line":166,"column":10,"nodeType":"214","messageId":"215","endLine":166,"endColumn":22},{"ruleId":"212","severity":1,"message":"245","line":174,"column":10,"nodeType":"214","messageId":"215","endLine":174,"endColumn":27},{"ruleId":"212","severity":1,"message":"246","line":180,"column":9,"nodeType":"214","messageId":"215","endLine":180,"endColumn":30},{"ruleId":"212","severity":1,"message":"247","line":194,"column":9,"nodeType":"214","messageId":"215","endLine":194,"endColumn":35},{"ruleId":"212","severity":1,"message":"248","line":208,"column":10,"nodeType":"214","messageId":"215","endLine":208,"endColumn":27},{"ruleId":"212","severity":1,"message":"249","line":358,"column":25,"nodeType":"214","messageId":"215","endLine":358,"endColumn":41},{"ruleId":"212","severity":1,"message":"250","line":359,"column":10,"nodeType":"214","messageId":"215","endLine":359,"endColumn":32},{"ruleId":"212","severity":1,"message":"251","line":359,"column":34,"nodeType":"214","messageId":"215","endLine":359,"endColumn":59},{"ruleId":"224","severity":1,"message":"252","line":469,"column":4,"nodeType":"226","endLine":469,"endColumn":30,"suggestions":"253"},{"ruleId":"212","severity":1,"message":"254","line":477,"column":10,"nodeType":"214","messageId":"215","endLine":477,"endColumn":19},{"ruleId":"224","severity":1,"message":"255","line":503,"column":6,"nodeType":"226","endLine":503,"endColumn":8,"suggestions":"256"},{"ruleId":"212","severity":1,"message":"257","line":617,"column":9,"nodeType":"214","messageId":"215","endLine":617,"endColumn":24},{"ruleId":"212","severity":1,"message":"258","line":650,"column":9,"nodeType":"214","messageId":"215","endLine":650,"endColumn":31},{"ruleId":"224","severity":1,"message":"252","line":747,"column":6,"nodeType":"226","endLine":747,"endColumn":32,"suggestions":"259"},{"ruleId":"212","severity":1,"message":"260","line":754,"column":7,"nodeType":"214","messageId":"215","endLine":754,"endColumn":15},{"ruleId":"224","severity":1,"message":"261","line":766,"column":6,"nodeType":"226","endLine":766,"endColumn":32,"suggestions":"262"},{"ruleId":"212","severity":1,"message":"263","line":854,"column":9,"nodeType":"214","messageId":"215","endLine":854,"endColumn":15},{"ruleId":"264","severity":1,"message":"265","line":1129,"column":76,"nodeType":"266","messageId":"267","endLine":1129,"endColumn":78},{"ruleId":"212","severity":1,"message":"268","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":13},{"ruleId":"212","severity":1,"message":"269","line":101,"column":12,"nodeType":"214","messageId":"215","endLine":101,"endColumn":19},{"ruleId":"208","replacedBy":"270"},{"ruleId":"210","replacedBy":"271"},{"ruleId":"212","severity":1,"message":"272","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":24},{"ruleId":"212","severity":1,"message":"273","line":5,"column":8,"nodeType":"214","messageId":"215","endLine":5,"endColumn":11},{"ruleId":"212","severity":1,"message":"274","line":25,"column":10,"nodeType":"214","messageId":"215","endLine":25,"endColumn":18},{"ruleId":"224","severity":1,"message":"275","line":54,"column":6,"nodeType":"226","endLine":54,"endColumn":21,"suggestions":"276"},{"ruleId":"212","severity":1,"message":"277","line":5,"column":10,"nodeType":"214","messageId":"215","endLine":5,"endColumn":19},{"ruleId":"212","severity":1,"message":"277","line":5,"column":10,"nodeType":"214","messageId":"215","endLine":5,"endColumn":19},{"ruleId":"212","severity":1,"message":"278","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":25},{"ruleId":"212","severity":1,"message":"279","line":1,"column":27,"nodeType":"214","messageId":"215","endLine":1,"endColumn":36},{"ruleId":"212","severity":1,"message":"280","line":1,"column":38,"nodeType":"214","messageId":"215","endLine":1,"endColumn":44},{"ruleId":"212","severity":1,"message":"277","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":19},{"ruleId":"212","severity":1,"message":"281","line":2,"column":21,"nodeType":"214","messageId":"215","endLine":2,"endColumn":32},{"ruleId":"212","severity":1,"message":"213","line":3,"column":10,"nodeType":"214","messageId":"215","endLine":3,"endColumn":14},{"ruleId":"212","severity":1,"message":"217","line":6,"column":8,"nodeType":"214","messageId":"215","endLine":6,"endColumn":18},{"ruleId":"212","severity":1,"message":"236","line":9,"column":3,"nodeType":"214","messageId":"215","endLine":9,"endColumn":15},{"ruleId":"212","severity":1,"message":"282","line":10,"column":3,"nodeType":"214","messageId":"215","endLine":10,"endColumn":11},{"ruleId":"212","severity":1,"message":"283","line":11,"column":3,"nodeType":"214","messageId":"215","endLine":11,"endColumn":23},{"ruleId":"212","severity":1,"message":"284","line":12,"column":3,"nodeType":"214","messageId":"215","endLine":12,"endColumn":22},{"ruleId":"212","severity":1,"message":"237","line":13,"column":3,"nodeType":"214","messageId":"215","endLine":13,"endColumn":25},{"ruleId":"212","severity":1,"message":"285","line":16,"column":3,"nodeType":"214","messageId":"215","endLine":16,"endColumn":20},{"ruleId":"212","severity":1,"message":"286","line":17,"column":3,"nodeType":"214","messageId":"215","endLine":17,"endColumn":19},{"ruleId":"212","severity":1,"message":"287","line":18,"column":3,"nodeType":"214","messageId":"215","endLine":18,"endColumn":11},{"ruleId":"212","severity":1,"message":"288","line":19,"column":3,"nodeType":"214","messageId":"215","endLine":19,"endColumn":18},{"ruleId":"212","severity":1,"message":"272","line":22,"column":8,"nodeType":"214","messageId":"215","endLine":22,"endColumn":24},{"ruleId":"212","severity":1,"message":"289","line":1,"column":35,"nodeType":"214","messageId":"215","endLine":1,"endColumn":43},{"ruleId":"212","severity":1,"message":"230","line":1,"column":45,"nodeType":"214","messageId":"215","endLine":1,"endColumn":61},{"ruleId":"212","severity":1,"message":"290","line":1,"column":63,"nodeType":"214","messageId":"215","endLine":1,"endColumn":69},{"ruleId":"212","severity":1,"message":"280","line":5,"column":31,"nodeType":"214","messageId":"215","endLine":5,"endColumn":37},{"ruleId":"212","severity":1,"message":"233","line":6,"column":10,"nodeType":"214","messageId":"215","endLine":6,"endColumn":16},{"ruleId":"212","severity":1,"message":"291","line":6,"column":41,"nodeType":"214","messageId":"215","endLine":6,"endColumn":51},{"ruleId":"212","severity":1,"message":"292","line":208,"column":35,"nodeType":"214","messageId":"215","endLine":208,"endColumn":46},{"ruleId":"212","severity":1,"message":"289","line":1,"column":35,"nodeType":"214","messageId":"215","endLine":1,"endColumn":43},{"ruleId":"212","severity":1,"message":"230","line":1,"column":45,"nodeType":"214","messageId":"215","endLine":1,"endColumn":61},{"ruleId":"212","severity":1,"message":"290","line":1,"column":63,"nodeType":"214","messageId":"215","endLine":1,"endColumn":69},{"ruleId":"212","severity":1,"message":"280","line":5,"column":31,"nodeType":"214","messageId":"215","endLine":5,"endColumn":37},{"ruleId":"212","severity":1,"message":"233","line":6,"column":10,"nodeType":"214","messageId":"215","endLine":6,"endColumn":16},{"ruleId":"212","severity":1,"message":"291","line":6,"column":41,"nodeType":"214","messageId":"215","endLine":6,"endColumn":51},{"ruleId":"212","severity":1,"message":"292","line":220,"column":35,"nodeType":"214","messageId":"215","endLine":220,"endColumn":46},{"ruleId":"212","severity":1,"message":"217","line":21,"column":8,"nodeType":"214","messageId":"215","endLine":21,"endColumn":18},{"ruleId":"212","severity":1,"message":"238","line":37,"column":10,"nodeType":"214","messageId":"215","endLine":37,"endColumn":38},{"ruleId":"212","severity":1,"message":"240","line":108,"column":7,"nodeType":"214","messageId":"215","endLine":108,"endColumn":10},{"ruleId":"212","severity":1,"message":"241","line":111,"column":9,"nodeType":"214","messageId":"215","endLine":111,"endColumn":18},{"ruleId":"212","severity":1,"message":"244","line":166,"column":10,"nodeType":"214","messageId":"215","endLine":166,"endColumn":22},{"ruleId":"212","severity":1,"message":"245","line":174,"column":10,"nodeType":"214","messageId":"215","endLine":174,"endColumn":27},{"ruleId":"212","severity":1,"message":"246","line":180,"column":9,"nodeType":"214","messageId":"215","endLine":180,"endColumn":30},{"ruleId":"212","severity":1,"message":"247","line":194,"column":9,"nodeType":"214","messageId":"215","endLine":194,"endColumn":35},{"ruleId":"212","severity":1,"message":"248","line":208,"column":10,"nodeType":"214","messageId":"215","endLine":208,"endColumn":27},{"ruleId":"212","severity":1,"message":"249","line":347,"column":25,"nodeType":"214","messageId":"215","endLine":347,"endColumn":41},{"ruleId":"212","severity":1,"message":"250","line":348,"column":10,"nodeType":"214","messageId":"215","endLine":348,"endColumn":32},{"ruleId":"212","severity":1,"message":"251","line":348,"column":34,"nodeType":"214","messageId":"215","endLine":348,"endColumn":59},{"ruleId":"224","severity":1,"message":"255","line":456,"column":6,"nodeType":"226","endLine":456,"endColumn":8,"suggestions":"293"},{"ruleId":"212","severity":1,"message":"258","line":721,"column":9,"nodeType":"214","messageId":"215","endLine":721,"endColumn":31},{"ruleId":"224","severity":1,"message":"294","line":865,"column":6,"nodeType":"226","endLine":865,"endColumn":32,"suggestions":"295"},{"ruleId":"212","severity":1,"message":"260","line":872,"column":7,"nodeType":"214","messageId":"215","endLine":872,"endColumn":15},{"ruleId":"224","severity":1,"message":"261","line":884,"column":6,"nodeType":"226","endLine":884,"endColumn":32,"suggestions":"296"},{"ruleId":"224","severity":1,"message":"294","line":952,"column":6,"nodeType":"226","endLine":952,"endColumn":32,"suggestions":"297"},{"ruleId":"264","severity":1,"message":"265","line":1216,"column":76,"nodeType":"266","messageId":"267","endLine":1216,"endColumn":78},"no-native-reassign",["298"],"no-negated-in-lhs",["299"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'SideMenu' is defined but never used.","'Typography' is defined but never used.","'onBack' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'setSearchString' is assigned a value but never used.","'filteredFiles' is assigned a value but never used.",["298"],["299"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'groups'. Either include it or remove the dependency array.","ArrayExpression",["300"],["298"],["299"],"'FormControlLabel' is defined but never used.","'SaveIcon' is defined but never used.","'CancelIcon' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'GridRowModes' is defined but never used.","'GridRowEditStopReasons' is defined but never used.","'ControlPointDuplicateRounded' is defined but never used.","'StyledDataGrid' is assigned a value but never used.","'fID' is assigned a value but never used.","'MenuProps' is assigned a value but never used.","'setOpenAlert' is assigned a value but never used.","'setRowModesModel' is assigned a value but never used.","'newFieldInfo' is assigned a value but never used.","'newFieldGroupInfo' is assigned a value but never used.","'handleFieldToggleForm' is assigned a value but never used.","'handleFieldGroupToggleForm' is assigned a value but never used.","'prototypeToRemove' is assigned a value but never used.","'setFieldToDelete' is assigned a value but never used.","'allInheritedPrototypes' is assigned a value but never used.","'setAllInheritedPrototypes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchDataWithRetry'. Either include it or remove the dependency array.",["301"],"'groupData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchAllData'. Either include it or remove the dependency array.",["302"],"'handleEditClick' is assigned a value but never used.","'handleDeleteClickField' is assigned a value but never used.",["303"],"'groupUrl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'headers'. Either include it or remove the dependency array.",["304"],"'BpIcon' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Stack' is defined but never used.","'timeout' is defined but never used.",["298"],["299"],"'NavigateNextIcon' is defined but never used.","'Box' is defined but never used.","'openForm' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'groups' and 'headers'. Either include them or remove the dependency array.",["305"],"'useParams' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useNavigate' is defined but never used.","'DataGrid' is defined but never used.","'GridToolbarContainer' is defined but never used.","'GridActionsCellItem' is defined but never used.","'randomCreatedDate' is defined but never used.","'randomTraderName' is defined but never used.","'randomId' is defined but never used.","'randomArrayItem' is defined but never used.","'Checkbox' is defined but never used.","'Button' is defined but never used.","'InputLabel' is defined but never used.","'optionValue' is assigned a value but never used.",["306"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["307"],["308"],["309"],"no-global-assign","no-unsafe-negation",{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"314","fix":"322"},{"desc":"323","fix":"324"},{"desc":"318","fix":"325"},{"desc":"326","fix":"327"},"Update the dependencies array to be: [expandedGroup, groups]",{"range":"328","text":"329"},"Update the dependencies array to be: [fetchDataWithRetry, groupName, prototypeName]",{"range":"330","text":"331"},"Update the dependencies array to be: [fetchAllData]",{"range":"332","text":"333"},"Update the dependencies array to be: [prototypeName, groupName, fetchDataWithRetry]",{"range":"334","text":"335"},"Update the dependencies array to be: [prototypeName, groupName, headers]",{"range":"336","text":"337"},"Update the dependencies array to be: [expandedGroup, groups, headers]",{"range":"338","text":"339"},{"range":"340","text":"333"},"Update the dependencies array to be: [prototypeName, groupName, fetchData]",{"range":"341","text":"342"},{"range":"343","text":"337"},"Update the dependencies array to be: [fetchData, groupName, prototypeName]",{"range":"344","text":"345"},[1253,1268],"[expandedGroup, groups]",[15710,15736],"[fetchDataWithRetry, groupName, prototypeName]",[16516,16518],"[fetchAllData]",[23855,23881],"[prototypeName, groupName, fetchDataWithRetry]",[24482,24508],"[prototypeName, groupName, headers]",[1873,1888],"[expandedGroup, groups, headers]",[15034,15036],[27500,27526],"[prototypeName, groupName, fetchData]",[28127,28153],[30302,30328],"[fetchData, groupName, prototypeName]"]